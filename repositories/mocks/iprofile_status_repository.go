// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-escort-consumer/repositories (interfaces: IProfileStatusRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-escort-consumer/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIProfileStatusRepository is a mock of IProfileStatusRepository interface.
type MockIProfileStatusRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIProfileStatusRepositoryMockRecorder
}

// MockIProfileStatusRepositoryMockRecorder is the mock recorder for MockIProfileStatusRepository.
type MockIProfileStatusRepositoryMockRecorder struct {
	mock *MockIProfileStatusRepository
}

// NewMockIProfileStatusRepository creates a new mock instance.
func NewMockIProfileStatusRepository(ctrl *gomock.Controller) *MockIProfileStatusRepository {
	mock := &MockIProfileStatusRepository{ctrl: ctrl}
	mock.recorder = &MockIProfileStatusRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProfileStatusRepository) EXPECT() *MockIProfileStatusRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIProfileStatusRepository) Create(arg0 context.Context, arg1 *models.ProfileStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIProfileStatusRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIProfileStatusRepository)(nil).Create), arg0, arg1)
}

// GetByProfileId mocks base method.
func (m *MockIProfileStatusRepository) GetByProfileId(arg0 context.Context, arg1 string) (models.ProfileStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByProfileId", arg0, arg1)
	ret0, _ := ret[0].(models.ProfileStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByProfileId indicates an expected call of GetByProfileId.
func (mr *MockIProfileStatusRepositoryMockRecorder) GetByProfileId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByProfileId", reflect.TypeOf((*MockIProfileStatusRepository)(nil).GetByProfileId), arg0, arg1)
}

// UpdateByProfileId mocks base method.
func (m *MockIProfileStatusRepository) UpdateByProfileId(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateByProfileId", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateByProfileId indicates an expected call of UpdateByProfileId.
func (mr *MockIProfileStatusRepositoryMockRecorder) UpdateByProfileId(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateByProfileId", reflect.TypeOf((*MockIProfileStatusRepository)(nil).UpdateByProfileId), arg0, arg1, arg2)
}
